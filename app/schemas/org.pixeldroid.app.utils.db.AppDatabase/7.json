{
  "formatVersion": 1,
  "database": {
    "version": 7,
    "identityHash": "cd0310b10eff0e3e961b3cd7a8172b81",
    "entities": [
      {
        "tableName": "instances",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`uri` TEXT NOT NULL, `title` TEXT NOT NULL, `maxStatusChars` INTEGER NOT NULL, `maxPhotoSize` INTEGER NOT NULL, `maxVideoSize` INTEGER NOT NULL, `albumLimit` INTEGER NOT NULL, `videoEnabled` INTEGER NOT NULL, `pixelfed` INTEGER NOT NULL, PRIMARY KEY(`uri`))",
        "fields": [
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "maxStatusChars",
            "columnName": "maxStatusChars",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxPhotoSize",
            "columnName": "maxPhotoSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxVideoSize",
            "columnName": "maxVideoSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "albumLimit",
            "columnName": "albumLimit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "videoEnabled",
            "columnName": "videoEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pixelfed",
            "columnName": "pixelfed",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "uri"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `instance_uri` TEXT NOT NULL, `username` TEXT NOT NULL, `display_name` TEXT NOT NULL, `avatar_static` TEXT NOT NULL, `isActive` INTEGER NOT NULL, `accessToken` TEXT NOT NULL, `refreshToken` TEXT, `clientId` TEXT NOT NULL, `clientSecret` TEXT NOT NULL, PRIMARY KEY(`user_id`, `instance_uri`), FOREIGN KEY(`instance_uri`) REFERENCES `instances`(`uri`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "user_id",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "instance_uri",
            "columnName": "instance_uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "display_name",
            "columnName": "display_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "avatar_static",
            "columnName": "avatar_static",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accessToken",
            "columnName": "accessToken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "refreshToken",
            "columnName": "refreshToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clientId",
            "columnName": "clientId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "clientSecret",
            "columnName": "clientSecret",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "instance_uri"
          ]
        },
        "indices": [
          {
            "name": "index_users_instance_uri",
            "unique": false,
            "columnNames": [
              "instance_uri"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_users_instance_uri` ON `${TABLE_NAME}` (`instance_uri`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "instances",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "instance_uri"
            ],
            "referencedColumns": [
              "uri"
            ]
          }
        ]
      },
      {
        "tableName": "homePosts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `instance_uri` TEXT NOT NULL, `id` TEXT NOT NULL, `uri` TEXT, `created_at` TEXT, `account` TEXT, `content` TEXT, `visibility` TEXT, `sensitive` INTEGER, `spoiler_text` TEXT, `media_attachments` TEXT, `application` TEXT, `mentions` TEXT, `tags` TEXT, `emojis` TEXT, `reblogs_count` INTEGER, `favourites_count` INTEGER, `replies_count` INTEGER, `url` TEXT, `in_reply_to_id` TEXT, `in_reply_to_account` TEXT, `reblog` TEXT, `poll` TEXT, `card` TEXT, `language` TEXT, `text` TEXT, `favourited` INTEGER, `reblogged` INTEGER, `muted` INTEGER, `bookmarked` INTEGER, `pinned` INTEGER, PRIMARY KEY(`id`, `user_id`, `instance_uri`), FOREIGN KEY(`user_id`, `instance_uri`) REFERENCES `users`(`user_id`, `instance_uri`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "user_id",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "instance_uri",
            "columnName": "instance_uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "account",
            "columnName": "account",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sensitive",
            "columnName": "sensitive",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "spoiler_text",
            "columnName": "spoiler_text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "media_attachments",
            "columnName": "media_attachments",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "application",
            "columnName": "application",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mentions",
            "columnName": "mentions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblogs_count",
            "columnName": "reblogs_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "favourites_count",
            "columnName": "favourites_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "replies_count",
            "columnName": "replies_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "in_reply_to_id",
            "columnName": "in_reply_to_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "in_reply_to_account",
            "columnName": "in_reply_to_account",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblog",
            "columnName": "reblog",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "poll",
            "columnName": "poll",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "card",
            "columnName": "card",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "favourited",
            "columnName": "favourited",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "reblogged",
            "columnName": "reblogged",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "muted",
            "columnName": "muted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "bookmarked",
            "columnName": "bookmarked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "pinned",
            "columnName": "pinned",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "user_id",
            "instance_uri"
          ]
        },
        "indices": [
          {
            "name": "index_homePosts_user_id_instance_uri",
            "unique": false,
            "columnNames": [
              "user_id",
              "instance_uri"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_homePosts_user_id_instance_uri` ON `${TABLE_NAME}` (`user_id`, `instance_uri`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id",
              "instance_uri"
            ],
            "referencedColumns": [
              "user_id",
              "instance_uri"
            ]
          }
        ]
      },
      {
        "tableName": "publicPosts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `instance_uri` TEXT NOT NULL, `id` TEXT NOT NULL, `uri` TEXT, `created_at` TEXT, `account` TEXT, `content` TEXT, `visibility` TEXT, `sensitive` INTEGER, `spoiler_text` TEXT, `media_attachments` TEXT, `application` TEXT, `mentions` TEXT, `tags` TEXT, `emojis` TEXT, `reblogs_count` INTEGER, `favourites_count` INTEGER, `replies_count` INTEGER, `url` TEXT, `in_reply_to_id` TEXT, `in_reply_to_account` TEXT, `reblog` TEXT, `poll` TEXT, `card` TEXT, `language` TEXT, `text` TEXT, `favourited` INTEGER, `reblogged` INTEGER, `muted` INTEGER, `bookmarked` INTEGER, `pinned` INTEGER, PRIMARY KEY(`id`, `user_id`, `instance_uri`), FOREIGN KEY(`user_id`, `instance_uri`) REFERENCES `users`(`user_id`, `instance_uri`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "user_id",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "instance_uri",
            "columnName": "instance_uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "account",
            "columnName": "account",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sensitive",
            "columnName": "sensitive",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "spoiler_text",
            "columnName": "spoiler_text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "media_attachments",
            "columnName": "media_attachments",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "application",
            "columnName": "application",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mentions",
            "columnName": "mentions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblogs_count",
            "columnName": "reblogs_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "favourites_count",
            "columnName": "favourites_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "replies_count",
            "columnName": "replies_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "in_reply_to_id",
            "columnName": "in_reply_to_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "in_reply_to_account",
            "columnName": "in_reply_to_account",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblog",
            "columnName": "reblog",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "poll",
            "columnName": "poll",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "card",
            "columnName": "card",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "favourited",
            "columnName": "favourited",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "reblogged",
            "columnName": "reblogged",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "muted",
            "columnName": "muted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "bookmarked",
            "columnName": "bookmarked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "pinned",
            "columnName": "pinned",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "user_id",
            "instance_uri"
          ]
        },
        "indices": [
          {
            "name": "index_publicPosts_user_id_instance_uri",
            "unique": false,
            "columnNames": [
              "user_id",
              "instance_uri"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_publicPosts_user_id_instance_uri` ON `${TABLE_NAME}` (`user_id`, `instance_uri`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id",
              "instance_uri"
            ],
            "referencedColumns": [
              "user_id",
              "instance_uri"
            ]
          }
        ]
      },
      {
        "tableName": "notifications",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `type` TEXT, `created_at` TEXT, `account` TEXT, `status` TEXT, `user_id` TEXT NOT NULL, `instance_uri` TEXT NOT NULL, PRIMARY KEY(`id`, `user_id`, `instance_uri`), FOREIGN KEY(`user_id`, `instance_uri`) REFERENCES `users`(`user_id`, `instance_uri`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "account",
            "columnName": "account",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user_id",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "instance_uri",
            "columnName": "instance_uri",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "user_id",
            "instance_uri"
          ]
        },
        "indices": [
          {
            "name": "index_notifications_user_id_instance_uri",
            "unique": false,
            "columnNames": [
              "user_id",
              "instance_uri"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notifications_user_id_instance_uri` ON `${TABLE_NAME}` (`user_id`, `instance_uri`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id",
              "instance_uri"
            ],
            "referencedColumns": [
              "user_id",
              "instance_uri"
            ]
          }
        ]
      },
      {
        "tableName": "tabsChecked",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`index` INTEGER NOT NULL, `user_id` TEXT NOT NULL, `instance_uri` TEXT NOT NULL, `tab` TEXT NOT NULL, `checked` INTEGER NOT NULL, PRIMARY KEY(`index`, `user_id`, `instance_uri`), FOREIGN KEY(`user_id`, `instance_uri`) REFERENCES `users`(`user_id`, `instance_uri`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "index",
            "columnName": "index",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user_id",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "instance_uri",
            "columnName": "instance_uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tab",
            "columnName": "tab",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "checked",
            "columnName": "checked",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "index",
            "user_id",
            "instance_uri"
          ]
        },
        "indices": [
          {
            "name": "index_tabsChecked_user_id_instance_uri",
            "unique": false,
            "columnNames": [
              "user_id",
              "instance_uri"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tabsChecked_user_id_instance_uri` ON `${TABLE_NAME}` (`user_id`, `instance_uri`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id",
              "instance_uri"
            ],
            "referencedColumns": [
              "user_id",
              "instance_uri"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'cd0310b10eff0e3e961b3cd7a8172b81')"
    ]
  }
}